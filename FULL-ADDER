TESTBENCH CODE 
module main;
    reg a, b, c;
    wire sum, carry;
    
    // Instantiate the full adder design
    fulladder add(a, b, c, sum, carry);
    
    // Initial block for dumping the waveform
    initial begin
        $dumpfile("add.vcd");      // Specify the VCD file name
        $dumpvars(0, main);        // Dump variables from the main module
    end

    // Display the input and output whenever they change
    always @(a or b or c or sum or carry) begin
        $display("Input A= %b B= %b C= %b Sum = %b Carry = %b\n", a, b, c, sum, carry);
    end

    // Apply different inputs to test the full adder
    initial begin
        a = 0; b = 0; c = 0;
        #5 a = 0; b = 0; c = 1;
        #5 a = 0; b = 1; c = 0;
        #5 a = 0; b = 1; c = 1;
        #5 a = 1; b = 0; c = 0;
        #5 a = 1; b = 0; c = 1;
        #5 a = 1; b = 1; c = 0;
        #5 a = 1; b = 1; c = 1;
    end
endmodule


DESIGN CODE

module fulladder(a, b, c, sum, carry);
    input a, b, c;
    output sum, carry;
    assign sum = a ^ b ^ c;               // XOR for sum
    assign carry = (a & b) | (b & c) | (a & c);  // OR for carry
endmodule
